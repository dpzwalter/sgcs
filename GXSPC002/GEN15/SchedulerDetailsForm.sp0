spec_i([ web,131,'Scheduler Details Form','SchedulerDetailsForm',0,eng,'16_0_10-142546' ]).
 
struct_i(2,1,[ 'Currentevent' ],[]).
 
level_i(2,[ 0,[],[],[],[],[],[],[],[],[] ]).
 
tw_i(2,[]).
 
lwi_i(2,[ [] ]).
 
 
 
 
ta_i(2,[ [] ]).
 
las_i(2,[ [ 'Mode','Eventid','Eventstarttime','Eventendtime' ] ]).
 
lac_i(2,[ [] ]).
 
 
lits_i('event Id',5,10).
lits_i('event Start Time',5,10).
lits_i('event End Time',5,10).
 
cls_i([ 0,0 ],[ 5,25 ]).
 
pos_i('Eventid',[ 0,0,0 ]).
pos_i('Eventstarttime',[ 0,0,0 ]).
pos_i('Eventendtime',[ 0,0,0 ]).
 
 
 
rule_i(0,datastore(2,'DS_LAST_CHANGE','')).
rule_i(0,datastore(2,'LOCK_RETRY','10')).
rule_i(0,datastore(2,'WAIT_RECORD','0')).
rule_i(0,datastore(2,'ISOLATION_LEVEL','CR')).
rule_i(0,datastore(2,'SQLSERVER_VERSION','10')).
rule_i(0,datastore(2,'COMMENT_ON','No')).
rule_i(0,datastore(2,'DFT_TMP_TBLSPACE','')).
rule_i(0,datastore(2,'DFT_IDX_TBLSPACE','')).
rule_i(0,datastore(2,'DFT_TBL_TBLSPACE','')).
rule_i(0,datastore(2,'DCL_REF_INT_DB','Yes')).
rule_i(0,datastore(2,'PRIMARY_KEY_TYPE','PK')).
rule_i(0,datastore(2,'CS_SCHEMA',gam)).
rule_i(0,datastore(2,'SORT_ATTRIBUTES','Yes')).
rule_i(0,datastore(2,'JRN400','QSQJRN')).
rule_i(0,datastore(2,'CREATE_SAVF','Yes')).
rule_i(0,datastore(2,'PGMLIB','')).
rule_i(0,datastore(2,'DTALIB','')).
rule_i(0,datastore(2,'CC_USER_PASS','ÖmZ]atπWêd¡xe∆rv')).
rule_i(0,datastore(2,'CC_USER_ID',uQBYYB1GlZ9vU8Jf)).
rule_i(0,datastore(2,'CC_SERVER','trialapps3.genexus.com')).
rule_i(0,datastore(2,'CC_DBNAME','Id0a061a7d5fed074419778f6b67627b48')).
rule_i(0,datastore(2,'RecycleRWMin','30')).
rule_i(0,datastore(2,'RecycleRWType','1')).
rule_i(0,datastore(2,'RecycleRW','-1')).
rule_i(0,datastore(2,'POOL_STARTUP','No')).
rule_i(0,datastore(2,'POOLSIZE_RW','10')).
rule_i(0,datastore(2,'UnlimitedRWPool','-1')).
rule_i(0,datastore(2,'PoolRWEnabled','-1')).
rule_i(0,datastore(2,'CS_RPCPGML','')).
rule_i(0,datastore(2,'JDBC_DATASOURCE','')).
rule_i(0,datastore(2,'USE_JDBC_DATASOURCE','0')).
rule_i(0,datastore(2,'DS_DBMS_ADDINFO','')).
rule_i(0,datastore(2,'USER_PASSWORD','uQ⁄<EaÍ@‚øÃ7J^ÍAÜY⁄HÃTV')).
rule_i(0,datastore(2,'USER_ID',uQBYYB1GlZ9vU8Jf)).
rule_i(0,datastore(2,'TRUSTED_CONNECTION','No')).
rule_i(0,datastore(2,'CS_CONNECT','First')).
rule_i(0,datastore(2,'DBMS_PORT','')).
rule_i(0,datastore(2,'CS_SERVER','trialapps3.genexus.com')).
rule_i(0,datastore(2,'CS_DBNAME','Id0a061a7d5fed074419778f6b67627b48')).
rule_i(0,datastore(2,'CS_FLEDSNAME','')).
rule_i(0,datastore(2,'CS_DRVNAME','sql server')).
rule_i(0,datastore(2,'CS_DSNAME','')).
rule_i(0,datastore(2,'DB_URL','')).
rule_i(0,datastore(2,'JDBC_CUSTOM_URL','0')).
rule_i(0,datastore(2,'JDBC_CUSTOM_DRIVER','')).
rule_i(0,datastore(2,'JDBC_DRIVER','net.sourceforge.jtds.jdbc.Driver')).
rule_i(0,datastore(2,'CONNECT_METHOD','OPSYS')).
rule_i(0,datastore(2,'ACCESS_TECHNO','ADONET')).
rule_i(0,datastore(2,'MAIN_DS','-1')).
rule_i(0,datastore(2,'REORG_GEN','8')).
rule_i(0,datastore(2,'HelpKeyword','23')).
rule_i(0,datastore(2,'DBMS',12)).
rule_i(0,datastore(2,'NAME','GAM')).
rule_i(0,datastore(1,'DS_LAST_CHANGE','')).
rule_i(0,datastore(1,'LOCK_RETRY','10')).
rule_i(0,datastore(1,'WAIT_RECORD','0')).
rule_i(0,datastore(1,'ISOLATION_LEVEL','CR')).
rule_i(0,datastore(1,'SQLSERVER_VERSION','10')).
rule_i(0,datastore(1,'COMMENT_ON','No')).
rule_i(0,datastore(1,'DFT_TMP_TBLSPACE','')).
rule_i(0,datastore(1,'DFT_IDX_TBLSPACE','')).
rule_i(0,datastore(1,'DFT_TBL_TBLSPACE','')).
rule_i(0,datastore(1,'DCL_REF_INT_DB','Yes')).
rule_i(0,datastore(1,'PRIMARY_KEY_TYPE','PK')).
rule_i(0,datastore(1,'CS_SCHEMA','')).
rule_i(0,datastore(1,'SORT_ATTRIBUTES','Yes')).
rule_i(0,datastore(1,'JRN400','QSQJRN')).
rule_i(0,datastore(1,'CREATE_SAVF','Yes')).
rule_i(0,datastore(1,'PGMLIB','')).
rule_i(0,datastore(1,'DTALIB','')).
rule_i(0,datastore(1,'CC_USER_PASS','ÖmZ]atπWêd¡xe∆rv')).
rule_i(0,datastore(1,'CC_USER_ID',uQBYYB1GlZ9vU8Jf)).
rule_i(0,datastore(1,'CC_SERVER','trialapps3.genexus.com')).
rule_i(0,datastore(1,'CC_DBNAME','Id0a061a7d5fed074419778f6b67627b48')).
rule_i(0,datastore(1,'RecycleRWMin','30')).
rule_i(0,datastore(1,'RecycleRWType','1')).
rule_i(0,datastore(1,'RecycleRW','-1')).
rule_i(0,datastore(1,'POOL_STARTUP','No')).
rule_i(0,datastore(1,'POOLSIZE_RW','10')).
rule_i(0,datastore(1,'UnlimitedRWPool','-1')).
rule_i(0,datastore(1,'PoolRWEnabled','-1')).
rule_i(0,datastore(1,'CS_RPCPGML','')).
rule_i(0,datastore(1,'JDBC_DATASOURCE','')).
rule_i(0,datastore(1,'USE_JDBC_DATASOURCE','0')).
rule_i(0,datastore(1,'DS_DBMS_ADDINFO','')).
rule_i(0,datastore(1,'USER_PASSWORD','uQ⁄<EaÍ@‚øÃ7J^ÍAÜY⁄HÃTV')).
rule_i(0,datastore(1,'USER_ID',uQBYYB1GlZ9vU8Jf)).
rule_i(0,datastore(1,'TRUSTED_CONNECTION','No')).
rule_i(0,datastore(1,'CS_CONNECT','First')).
rule_i(0,datastore(1,'DBMS_PORT','')).
rule_i(0,datastore(1,'CS_SERVER','trialapps3.genexus.com')).
rule_i(0,datastore(1,'CS_DBNAME','Id0a061a7d5fed074419778f6b67627b48')).
rule_i(0,datastore(1,'CS_FLEDSNAME','')).
rule_i(0,datastore(1,'CS_DRVNAME','sql server')).
rule_i(0,datastore(1,'CS_DSNAME','')).
rule_i(0,datastore(1,'DB_URL','')).
rule_i(0,datastore(1,'JDBC_CUSTOM_URL','0')).
rule_i(0,datastore(1,'JDBC_CUSTOM_DRIVER','')).
rule_i(0,datastore(1,'JDBC_DRIVER','net.sourceforge.jtds.jdbc.Driver')).
rule_i(0,datastore(1,'CONNECT_METHOD','OPSYS')).
rule_i(0,datastore(1,'ACCESS_TECHNO','ADONET')).
rule_i(0,datastore(1,'MAIN_DS','-1')).
rule_i(0,datastore(1,'REORG_GEN','8')).
rule_i(0,datastore(1,'HelpKeyword','20')).
rule_i(0,datastore(1,'DBMS',12)).
rule_i(0,datastore(1,'NAME','Default')).
rule_i(0,prop(idNULLS_BEHAVIOR,idNB_Current)).
rule_i(0,prop('PWFCallable','0')).
rule_i(0,prop('ObjectVisibility','Public')).
rule_i(0,prop('FullyQualifiedName','SchedulerDetailsForm')).
rule_i(0,prop('GenerateObject','-1')).
rule_i(0,prop('Hint_firstrows','UMPV')).
rule_i(0,prop('JOIN_TYPE','UMPV')).
rule_i(0,prop('DBMS_JOINS','UMPV')).
rule_i(0,prop('REFRESH_TOUT_TRIG','ALL')).
rule_i(0,prop('REFRESH_TOUT','')).
rule_i(0,prop('KEY_ENTER','UMPV')).
rule_i(0,prop('KEY_CANCEL','UMPV')).
rule_i(0,prop('KEY_REFRESH','UMPV')).
rule_i(0,prop('KEY_HELP','UMPV')).
rule_i(0,prop('ASSIGNED_FNC_KEYS','UMPV')).
rule_i(0,prop('WEB_SECURITY_LEVEL','High')).
rule_i(0,prop('HTTP_PROTOCOL','Secure')).
rule_i(0,prop('USE_ENCRYPTION','NO')).
rule_i(0,prop('FIRST_WD_DATEPICKER','UMPV')).
rule_i(0,prop('WNUM_DATEPICKER','UMPV')).
rule_i(0,prop(idUSE_WEB_DATEPICKER,'UMPV')).
rule_i(0,prop('WebUX','SMOOTH')).
rule_i(0,prop('STD_FUNC_OBJECT','Yes')).
rule_i(0,prop('SPC_WARNINGS_DISABLED','spc0096 spc0107 spc0142')).
rule_i(0,prop('WebApplication',idDefault)).
rule_i(0,prop('COMPRESS_HTML','UMPV')).
rule_i(0,prop('AUTO_REFRESH','VARS_CHANGE')).
rule_i(0,prop('CACHE_EXPIRES','')).
rule_i(0,prop('WEB_AUTO_FOCUS','UMPV')).
rule_i(0,prop('OnSessionTimeout','Ignore')).
rule_i(0,prop('OBJECT_METADATA','')).
rule_i(0,prop('IsMain','0')).
rule_i(0,prop(sessiontype,'RW')).
rule_i(0,prop('WEB_COMP','No')).
rule_i(0,prop('Theme',o(25,'Carmine'))).
rule_i(0,prop('Folder',o(8,'Scheduler'))).
rule_i(0,prop('ObjDesc','Scheduler Details Form')).
rule_i(0,prop('ObjName','SchedulerDetailsForm')).
rule_i(0,maingen(15)).
rule_i(0,parm([ 'Mode','Eventid','Eventstarttime','Eventendtime' ],[])).
rule_i(0,parmio([ [ 'Mode',inout ],[ 'Eventid',inout ],[ 'Eventstarttime',inout ],[ 'Eventendtime',inout ] ])).
 
a_i(1,1,f,'Err',[],[ [],[ t('0',3) ] ]).
 
v_i(f,i,1,[]).
v_i(f,o,1,'Err').
 
 
 
 
 
 
attri_i('Errmsg',[ 'Gx_emsg',char,70,0,'',1,'Error text','',12 ]).
attri_i('Err',[ 'Gx_err',int,3,0,'ZZ9',1,'Error code','',11 ]).
attri_i('Mode',[ 'Gx_mode',char,3,0,'@!',1,'','',10 ]).
attri_i('Eventstarttime',[ eventStartTime,dtime,8,5,'99/99/99 99:99',0,'event Start Time','',9 ]).
attri_i('Eventid',[ eventId,char,20,0,'',0,'event Id','',8 ]).
attri_i('Eventendtime',[ eventEndTime,dtime,8,5,'99/99/99 99:99',0,'event End Time','',7 ]).
attri_i('Currentevent',[ currentEvent,o('SchedulerEvents.event'),0,0,'',0,'current Event','',6 ]).
attri_i('Websession',[ websession,o(websession),4,0,'',0,websession,'',5 ]).
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
break_i(2,nvg,1,[],[ [],[],[] ]).
 
b_group_i(2,1,lit,0,1,1).
b_group_i(2,2,lit,0,2,0).
 
b_line_i(1,2,1,cmd,1,[ t('',146,1,0),t('Start',3,1,7) ]).
b_line_i(2,2,2,cmd,1,[ t('',107,2,0),t([ t('Currentevent',23,2,2),t('fromxml(',1,2,16) ],31,2,2),t([ t('Websession',23,2,25),t('get(',1,2,37) ],31,2,37),t('"currentevent"',3,2,42),t(')',4,1,56),t(')',4,1,57) ]).
b_line_i(3,2,2,cmd,1,[ t('',147,3,0) ]).
b_line_i(1000,2,2,cmd,0,[ t('',146,0,0),t('Load',3,0,0) ]).
b_line_i(1001,2,2,cmd,0,[ t('',155,0,0) ]).
b_line_i(1002,2,2,cmd,0,[ t('',147,0,0) ]).
 
 
 
 
 
 
 
 
 
 
 
 
 
 
html_i(2,html('<p>')).
html_i(3,html('Scheduler details form')).
html_i(4,html('</p>')).
html_i(5,table(5)).
html_i(21,html('<p></p>')).
html_i(22,html('<p></p>')).
 
html_sub_i(5,0,html_i(0,html('<tbody>'))).
html_sub_i(5,6,html_i(1,row(6))).
html_sub_i(6,7,html_i(0,cell(7))).
html_sub_i(7,8,html_i(0,t('event Id',3))).
html_sub_i(6,9,html_i(1,cell(9))).
html_sub_i(9,10,html_i(0,t('Eventid',23))).
html_sub_i(5,11,html_i(2,row(11))).
html_sub_i(11,12,html_i(0,cell(12))).
html_sub_i(12,13,html_i(0,t('event Start Time',3))).
html_sub_i(11,14,html_i(1,cell(14))).
html_sub_i(14,15,html_i(0,t('Eventstarttime',23))).
html_sub_i(5,16,html_i(3,row(16))).
html_sub_i(16,17,html_i(0,cell(17))).
html_sub_i(17,18,html_i(0,t('event End Time',3))).
html_sub_i(16,19,html_i(1,cell(19))).
html_sub_i(19,20,html_i(0,t('Eventendtime',23))).
html_sub_i(5,0,html_i(4,html('</tbody>'))).
 
html_tags_i(1,'Class','Form').
 
html_comp_i(5,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(5,'Id','Table1',v,[ str ]).
html_comp_i(5,'Class','Table',v,[ str ]).
html_comp_i(5,'Title','',d,[ str ]).
html_comp_i(5,'Header','',d,[ str ]).
html_comp_i(5,'Align',left,d,[ str ]).
html_comp_i(5,'Backgroundgx','',d,[ str ]).
html_comp_i(5,'Bgcolor',rgb(0,0,0),d,[ color ]).
html_comp_i(5,'Border','0',d,[ str ]).
html_comp_i(5,'Bordercolor',rgb(0,0,0),d,[ color ]).
html_comp_i(5,'Cellpadding','1',d,[ str ]).
html_comp_i(5,'Cellspacing','2',d,[ str ]).
html_comp_i(5,'Height',measure(0,px),d,[ measure ]).
html_comp_i(5,'Width',measure(0,px),d,[ measure ]).
html_comp_i(5,'Rules',none,d,[ str ]).
html_comp_i(8,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(8,'Caption','event Id',d,[ str ]).
html_comp_i(8,'Id','Textblock1',v,[ str ]).
html_comp_i(8,'Class','TextBlock',d,[ str ]).
html_comp_i(8,'Event','',d,[ str ]).
html_comp_i(8,'Returnonclick',0,d,[ bool ]).
html_comp_i(8,'Gxformat',0,d,[ num ]).
html_comp_i(8,'Title','',d,[ str ]).
html_comp_i(8,'Fill',-1,d,[ bool ]).
html_comp_i(8,'Backcolor',rgb(255,255,255),d,[ color ]).
html_comp_i(8,'Forecolor',rgb(0,0,0),d,[ color ]).
html_comp_i(8,'Font','',d,[ str ]).
html_comp_i(10,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(10,'Colcount',20,d,[ num ]).
html_comp_i(10,'Attid',-8,v,[ num ]).
html_comp_i(10,'Class','Attribute',d,[ str ]).
html_comp_i(10,'Controlname','&Eventid',d,[ str ]).
html_comp_i(10,'Returnonclick',0,d,[ bool ]).
html_comp_i(10,'Captionclass','',d,[ str ]).
html_comp_i(10,'Captionstyle','',d,[ str ]).
html_comp_i(10,'Captionposition','',d,[ str ]).
html_comp_i(10,'Captionvalue','',d,[ str ]).
html_comp_i(10,'Layoutclass','',d,[ str ]).
html_comp_i(10,'Controltype',2,d,[ num ]).
html_comp_i(10,'Inputtype',0,d,[ num ]).
html_comp_i(10,'Editautocomplete',0,d,[ num ]).
html_comp_i(10,'Autocorrection',-1,d,[ bool ]).
html_comp_i(10,'Autocapitalization','FirstWord',d,[ str ]).
html_comp_i(10,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(10,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(10,'Readonly',0,d,[ bool ]).
html_comp_i(10,'Autocomplete',-1,d,[ bool ]).
html_comp_i(10,'Ispassword',0,d,[ bool ]).
html_comp_i(10,'Autoresize',-1,d,[ bool ]).
html_comp_i(10,'Gxwidth',measure(20,chr),d,[ measure ]).
html_comp_i(10,'Gxheight',measure(1,row),d,[ measure ]).
html_comp_i(10,'Ismultiline',0,d,[ bool ]).
html_comp_i(10,'Maxtextnumberlines',0,d,[ num ]).
html_comp_i(10,'Fill',-1,d,[ bool ]).
html_comp_i(10,'Backcolor',rgb(255,255,255),d,[ color ]).
html_comp_i(10,'Forecolor',rgb(0,0,0),d,[ color ]).
html_comp_i(10,'Font',font('Arial',10,[]),d,[ font ]).
html_comp_i(10,'Horizontalalignment',left,d,[ str ]).
html_comp_i(10,'Gxformat',0,d,[ num ]).
html_comp_i(10,'Title','',d,[ str ]).
html_comp_i(10,'Invitemsg','',d,[ str ]).
html_comp_i(13,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(13,'Caption','event Start Time',d,[ str ]).
html_comp_i(13,'Id','Textblock2',v,[ str ]).
html_comp_i(13,'Class','TextBlock',d,[ str ]).
html_comp_i(13,'Event','',d,[ str ]).
html_comp_i(13,'Returnonclick',0,d,[ bool ]).
html_comp_i(13,'Gxformat',0,d,[ num ]).
html_comp_i(13,'Title','',d,[ str ]).
html_comp_i(13,'Fill',-1,d,[ bool ]).
html_comp_i(13,'Backcolor',rgb(255,255,255),d,[ color ]).
html_comp_i(13,'Forecolor',rgb(0,0,0),d,[ color ]).
html_comp_i(13,'Font','',d,[ str ]).
html_comp_i(15,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(15,'Colcount',17,d,[ num ]).
html_comp_i(15,'Attid',-9,v,[ num ]).
html_comp_i(15,'Class','Attribute',d,[ str ]).
html_comp_i(15,'Controlname','&Eventstarttime',d,[ str ]).
html_comp_i(15,'Returnonclick',0,d,[ bool ]).
html_comp_i(15,'Captionclass','',d,[ str ]).
html_comp_i(15,'Captionstyle','',d,[ str ]).
html_comp_i(15,'Captionposition','',d,[ str ]).
html_comp_i(15,'Captionvalue','',d,[ str ]).
html_comp_i(15,'Layoutclass','',d,[ str ]).
html_comp_i(15,'Controltype',2,d,[ num ]).
html_comp_i(15,'Inputtype',0,d,[ num ]).
html_comp_i(15,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(15,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(15,'Readonly',0,d,[ bool ]).
html_comp_i(15,'Autocomplete',-1,d,[ bool ]).
html_comp_i(15,'Ispassword',0,d,[ bool ]).
html_comp_i(15,'Autoresize',-1,d,[ bool ]).
html_comp_i(15,'Gxwidth',measure(17,chr),d,[ measure ]).
html_comp_i(15,'Gxheight',measure(1,row),d,[ measure ]).
html_comp_i(15,'Ismultiline',0,d,[ bool ]).
html_comp_i(15,'Maxtextnumberlines',0,d,[ num ]).
html_comp_i(15,'Fill',-1,d,[ bool ]).
html_comp_i(15,'Backcolor',rgb(255,255,255),d,[ color ]).
html_comp_i(15,'Forecolor',rgb(0,0,0),d,[ color ]).
html_comp_i(15,'Font',font('Arial',10,[]),d,[ font ]).
html_comp_i(15,'Horizontalalignment',right,d,[ str ]).
html_comp_i(15,'Gxformat',0,d,[ num ]).
html_comp_i(15,'Title','',d,[ str ]).
html_comp_i(15,'Invitemsg','',d,[ str ]).
html_comp_i(15,'Use_datepicker',-1,d,[ bool ]).
html_comp_i(15,'Flat_datepicker',0,d,[ bool ]).
html_comp_i(18,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(18,'Caption','event End Time',d,[ str ]).
html_comp_i(18,'Id','Textblock3',v,[ str ]).
html_comp_i(18,'Class','TextBlock',d,[ str ]).
html_comp_i(18,'Event','',d,[ str ]).
html_comp_i(18,'Returnonclick',0,d,[ bool ]).
html_comp_i(18,'Gxformat',0,d,[ num ]).
html_comp_i(18,'Title','',d,[ str ]).
html_comp_i(18,'Fill',-1,d,[ bool ]).
html_comp_i(18,'Backcolor',rgb(255,255,255),d,[ color ]).
html_comp_i(18,'Forecolor',rgb(0,0,0),d,[ color ]).
html_comp_i(18,'Font','',d,[ str ]).
html_comp_i(20,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(20,'Colcount',17,d,[ num ]).
html_comp_i(20,'Attid',-7,v,[ num ]).
html_comp_i(20,'Class','Attribute',d,[ str ]).
html_comp_i(20,'Controlname','&Eventendtime',d,[ str ]).
html_comp_i(20,'Returnonclick',0,d,[ bool ]).
html_comp_i(20,'Captionclass','',d,[ str ]).
html_comp_i(20,'Captionstyle','',d,[ str ]).
html_comp_i(20,'Captionposition','',d,[ str ]).
html_comp_i(20,'Captionvalue','',d,[ str ]).
html_comp_i(20,'Layoutclass','',d,[ str ]).
html_comp_i(20,'Controltype',2,d,[ num ]).
html_comp_i(20,'Inputtype',0,d,[ num ]).
html_comp_i(20,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(20,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(20,'Readonly',0,d,[ bool ]).
html_comp_i(20,'Autocomplete',-1,d,[ bool ]).
html_comp_i(20,'Ispassword',0,d,[ bool ]).
html_comp_i(20,'Autoresize',-1,d,[ bool ]).
html_comp_i(20,'Gxwidth',measure(17,chr),d,[ measure ]).
html_comp_i(20,'Gxheight',measure(1,row),d,[ measure ]).
html_comp_i(20,'Ismultiline',0,d,[ bool ]).
html_comp_i(20,'Maxtextnumberlines',0,d,[ num ]).
html_comp_i(20,'Fill',-1,d,[ bool ]).
html_comp_i(20,'Backcolor',rgb(255,255,255),d,[ color ]).
html_comp_i(20,'Forecolor',rgb(0,0,0),d,[ color ]).
html_comp_i(20,'Font',font('Arial',10,[]),d,[ font ]).
html_comp_i(20,'Horizontalalignment',right,d,[ str ]).
html_comp_i(20,'Gxformat',0,d,[ num ]).
html_comp_i(20,'Title','',d,[ str ]).
html_comp_i(20,'Invitemsg','',d,[ str ]).
html_comp_i(20,'Use_datepicker',-1,d,[ bool ]).
html_comp_i(20,'Flat_datepicker',0,d,[ bool ]).
 
 
 
 
 
 
 
 
lit_i(8,1,t('event Id',3),[ ctlname('Textblock1') ]).
lit_i(10,1,t('Eventid',23),[ ctlname('&Eventid'),ctrltype(edit,10),pos(10),ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(13,1,t('event Start Time',3),[ ctlname('Textblock2') ]).
lit_i(15,1,t('Eventstarttime',23),[ ctlname('&Eventstarttime'),ctrltype(edit,15),pos(15),ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(18,1,t('event End Time',3),[ ctlname('Textblock3') ]).
lit_i(20,1,t('Eventendtime',23),[ ctlname('&Eventendtime'),ctrltype(edit,20),pos(20),ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(5,1,table(5),[ ctlname('Table1') ]).
lit_i(1,1,window,[ rect(0,0,1000,1000),ctlname('Form') ]).
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
struct_dt_i([ 26,58,0 ],name,'SchedulerEvents').
struct_dt_i([ 26,58,0 ],namespace,'').
struct_dt_i([ 26,58,0 ],'ObjName','SchedulerEvents').
struct_dt_i([ 26,58,0 ],'ObjDesc','').
struct_dt_i([ 26,58,0 ],'ExternalName',data).
struct_dt_i([ 26,58,0 ],'ExternalNamespace','').
struct_dt_i([ 26,58,96 ],name,event).
struct_dt_i([ 26,58,96 ],namespace,'.SchedulerEvents').
struct_dt_i([ 26,58,97 ],name,'Day').
struct_dt_i([ 26,58,97 ],namespace,'.SchedulerEvents').
struct_dt_i([ 26,58,0 ],fullname,'SchedulerEvents').
struct_dt_i([ 26,58,96 ],fullname,'SchedulerEvents.event').
struct_dt_i([ 26,58,97 ],fullname,'SchedulerEvents.Day').
 
struct_dt_elem_i([ 26,58,0 ],1,name,'Items').
struct_dt_elem_i([ 26,58,0 ],1,camelname,'Items').
struct_dt_elem_i([ 26,58,0 ],1,type,[ [ 26,58,96 ],0,0 ]).
struct_dt_elem_i([ 26,58,0 ],1,pic,'').
struct_dt_elem_i([ 26,58,0 ],1,collection,'True').
struct_dt_elem_i([ 26,58,0 ],1,'ObjName','Items').
struct_dt_elem_i([ 26,58,0 ],1,'ObjDesc','Items').
struct_dt_elem_i([ 26,58,0 ],1,'CollectionItemName',event).
struct_dt_elem_i([ 26,58,0 ],1,'XmlCollectionItemName','').
struct_dt_elem_i([ 26,58,0 ],1,'XmlNamespace','').
struct_dt_elem_i([ 26,58,0 ],1,'CollectionSerialization',idXmlCollectionSequence).
struct_dt_elem_i([ 26,58,0 ],1,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,58,0 ],1,'JsonName','').
struct_dt_elem_i([ 26,58,0 ],1,'JsonInclude',idJsonNoProperty).
struct_dt_elem_i([ 26,58,96 ],1,name,'Id').
struct_dt_elem_i([ 26,58,96 ],1,camelname,'Id').
struct_dt_elem_i([ 26,58,96 ],1,length,20).
struct_dt_elem_i([ 26,58,96 ],1,decimals,0).
struct_dt_elem_i([ 26,58,96 ],1,type,[ 5,20,0 ]).
struct_dt_elem_i([ 26,58,96 ],1,pic,'').
struct_dt_elem_i([ 26,58,96 ],1,collection,'False').
struct_dt_elem_i([ 26,58,96 ],1,'ExternalName','Id').
struct_dt_elem_i([ 26,58,96 ],1,'ExternalNamespace','SGCS').
struct_dt_elem_i([ 26,58,96 ],1,'XmlType','Element').
struct_dt_elem_i([ 26,58,96 ],1,'XmlName','').
struct_dt_elem_i([ 26,58,96 ],1,'XmlNamespace','').
struct_dt_elem_i([ 26,58,96 ],1,soaptype,'').
struct_dt_elem_i([ 26,58,96 ],1,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,58,96 ],1,'JsonName','').
struct_dt_elem_i([ 26,58,96 ],1,'JsonInclude',idJsonEmpty).
struct_dt_elem_i([ 26,58,96 ],2,name,'Name').
struct_dt_elem_i([ 26,58,96 ],2,camelname,'Name').
struct_dt_elem_i([ 26,58,96 ],2,length,9999).
struct_dt_elem_i([ 26,58,96 ],2,decimals,0).
struct_dt_elem_i([ 26,58,96 ],2,type,[ 5,9999,0 ]).
struct_dt_elem_i([ 26,58,96 ],2,pic,'').
struct_dt_elem_i([ 26,58,96 ],2,collection,'False').
struct_dt_elem_i([ 26,58,96 ],2,'ExternalName','Name').
struct_dt_elem_i([ 26,58,96 ],2,'ExternalNamespace','SGCS').
struct_dt_elem_i([ 26,58,96 ],2,'XmlType','Element').
struct_dt_elem_i([ 26,58,96 ],2,'XmlName','').
struct_dt_elem_i([ 26,58,96 ],2,'XmlNamespace','').
struct_dt_elem_i([ 26,58,96 ],2,soaptype,'').
struct_dt_elem_i([ 26,58,96 ],2,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,58,96 ],2,'JsonName','').
struct_dt_elem_i([ 26,58,96 ],2,'JsonInclude',idJsonEmpty).
struct_dt_elem_i([ 26,58,96 ],3,name,'Notes').
struct_dt_elem_i([ 26,58,96 ],3,camelname,'Notes').
struct_dt_elem_i([ 26,58,96 ],3,length,9999).
struct_dt_elem_i([ 26,58,96 ],3,decimals,0).
struct_dt_elem_i([ 26,58,96 ],3,type,[ 5,9999,0 ]).
struct_dt_elem_i([ 26,58,96 ],3,pic,'').
struct_dt_elem_i([ 26,58,96 ],3,collection,'False').
struct_dt_elem_i([ 26,58,96 ],3,'ExternalName','Notes').
struct_dt_elem_i([ 26,58,96 ],3,'ExternalNamespace','SGCS').
struct_dt_elem_i([ 26,58,96 ],3,'XmlType','Element').
struct_dt_elem_i([ 26,58,96 ],3,'XmlName','Notes').
struct_dt_elem_i([ 26,58,96 ],3,'XmlNamespace','').
struct_dt_elem_i([ 26,58,96 ],3,soaptype,'').
struct_dt_elem_i([ 26,58,96 ],3,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,58,96 ],3,'JsonName','').
struct_dt_elem_i([ 26,58,96 ],3,'JsonInclude',idJsonEmpty).
struct_dt_elem_i([ 26,58,96 ],4,name,'Link').
struct_dt_elem_i([ 26,58,96 ],4,camelname,'Link').
struct_dt_elem_i([ 26,58,96 ],4,length,9999).
struct_dt_elem_i([ 26,58,96 ],4,decimals,0).
struct_dt_elem_i([ 26,58,96 ],4,type,[ 5,9999,0 ]).
struct_dt_elem_i([ 26,58,96 ],4,pic,'').
struct_dt_elem_i([ 26,58,96 ],4,collection,'False').
struct_dt_elem_i([ 26,58,96 ],4,'ExternalName','Link').
struct_dt_elem_i([ 26,58,96 ],4,'ExternalNamespace','SGCS').
struct_dt_elem_i([ 26,58,96 ],4,'XmlType','Element').
struct_dt_elem_i([ 26,58,96 ],4,'XmlName','').
struct_dt_elem_i([ 26,58,96 ],4,'XmlNamespace','').
struct_dt_elem_i([ 26,58,96 ],4,soaptype,'').
struct_dt_elem_i([ 26,58,96 ],4,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,58,96 ],4,'JsonName','').
struct_dt_elem_i([ 26,58,96 ],4,'JsonInclude',idJsonEmpty).
struct_dt_elem_i([ 26,58,96 ],5,name,'Starttime').
struct_dt_elem_i([ 26,58,96 ],5,camelname,'StartTime').
struct_dt_elem_i([ 26,58,96 ],5,length,10).
struct_dt_elem_i([ 26,58,96 ],5,decimals,5).
struct_dt_elem_i([ 26,58,96 ],5,type,[ 12,10,5 ]).
struct_dt_elem_i([ 26,58,96 ],5,pic,'99/99/9999 99:99').
struct_dt_elem_i([ 26,58,96 ],5,collection,'False').
struct_dt_elem_i([ 26,58,96 ],5,'ExternalName','StartTime').
struct_dt_elem_i([ 26,58,96 ],5,'ExternalNamespace','SGCS').
struct_dt_elem_i([ 26,58,96 ],5,'XmlType','Element').
struct_dt_elem_i([ 26,58,96 ],5,'XmlName','').
struct_dt_elem_i([ 26,58,96 ],5,'XmlNamespace','').
struct_dt_elem_i([ 26,58,96 ],5,soaptype,'').
struct_dt_elem_i([ 26,58,96 ],5,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,58,96 ],5,'XmlDateSerialization',idXmlDateDefaultFormat).
struct_dt_elem_i([ 26,58,96 ],5,'JsonName','').
struct_dt_elem_i([ 26,58,96 ],5,'JsonInclude',idJsonEmpty).
struct_dt_elem_i([ 26,58,96 ],6,name,'Endtime').
struct_dt_elem_i([ 26,58,96 ],6,camelname,'EndTime').
struct_dt_elem_i([ 26,58,96 ],6,length,10).
struct_dt_elem_i([ 26,58,96 ],6,decimals,5).
struct_dt_elem_i([ 26,58,96 ],6,type,[ 12,10,5 ]).
struct_dt_elem_i([ 26,58,96 ],6,pic,'99/99/9999 99:99').
struct_dt_elem_i([ 26,58,96 ],6,collection,'False').
struct_dt_elem_i([ 26,58,96 ],6,'ExternalName','EndTime').
struct_dt_elem_i([ 26,58,96 ],6,'ExternalNamespace','SGCS').
struct_dt_elem_i([ 26,58,96 ],6,'XmlType','Element').
struct_dt_elem_i([ 26,58,96 ],6,'XmlName','').
struct_dt_elem_i([ 26,58,96 ],6,'XmlNamespace','').
struct_dt_elem_i([ 26,58,96 ],6,soaptype,'').
struct_dt_elem_i([ 26,58,96 ],6,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,58,96 ],6,'XmlDateSerialization',idXmlDateDefaultFormat).
struct_dt_elem_i([ 26,58,96 ],6,'JsonName','').
struct_dt_elem_i([ 26,58,96 ],6,'JsonInclude',idJsonEmpty).
struct_dt_elem_i([ 26,58,96 ],7,name,'Additionalinformation').
struct_dt_elem_i([ 26,58,96 ],7,camelname,'AdditionalInformation').
struct_dt_elem_i([ 26,58,96 ],7,length,9999).
struct_dt_elem_i([ 26,58,96 ],7,decimals,0).
struct_dt_elem_i([ 26,58,96 ],7,type,[ 5,9999,0 ]).
struct_dt_elem_i([ 26,58,96 ],7,pic,'').
struct_dt_elem_i([ 26,58,96 ],7,collection,'False').
struct_dt_elem_i([ 26,58,96 ],7,'ExternalName','AdditionalInformation').
struct_dt_elem_i([ 26,58,96 ],7,'ExternalNamespace','SGCS').
struct_dt_elem_i([ 26,58,96 ],7,'XmlType','Element').
struct_dt_elem_i([ 26,58,96 ],7,'XmlName','AdditionalInformation').
struct_dt_elem_i([ 26,58,96 ],7,'XmlNamespace','').
struct_dt_elem_i([ 26,58,96 ],7,soaptype,'').
struct_dt_elem_i([ 26,58,96 ],7,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,58,96 ],7,'JsonName','').
struct_dt_elem_i([ 26,58,96 ],7,'JsonInclude',idJsonEmpty).
struct_dt_elem_i([ 26,58,96 ],8,name,'Color').
struct_dt_elem_i([ 26,58,96 ],8,camelname,'Color').
struct_dt_elem_i([ 26,58,96 ],8,length,9999).
struct_dt_elem_i([ 26,58,96 ],8,decimals,0).
struct_dt_elem_i([ 26,58,96 ],8,type,[ 5,9999,0 ]).
struct_dt_elem_i([ 26,58,96 ],8,pic,'').
struct_dt_elem_i([ 26,58,96 ],8,collection,'False').
struct_dt_elem_i([ 26,58,96 ],8,'ExternalName','Color').
struct_dt_elem_i([ 26,58,96 ],8,'ExternalNamespace','SGCS').
struct_dt_elem_i([ 26,58,96 ],8,'XmlType','Element').
struct_dt_elem_i([ 26,58,96 ],8,'XmlName','').
struct_dt_elem_i([ 26,58,96 ],8,'XmlNamespace','').
struct_dt_elem_i([ 26,58,96 ],8,soaptype,'').
struct_dt_elem_i([ 26,58,96 ],8,'XmlInclude',idXmlIncludeNotNull).
struct_dt_elem_i([ 26,58,96 ],8,'JsonName','').
struct_dt_elem_i([ 26,58,96 ],8,'JsonInclude',idJsonEmpty).
struct_dt_elem_i([ 26,58,96 ],9,name,'Backgroundcolor').
struct_dt_elem_i([ 26,58,96 ],9,camelname,'BackgroundColor').
struct_dt_elem_i([ 26,58,96 ],9,length,9999).
struct_dt_elem_i([ 26,58,96 ],9,decimals,0).
struct_dt_elem_i([ 26,58,96 ],9,type,[ 5,9999,0 ]).
struct_dt_elem_i([ 26,58,96 ],9,pic,'').
struct_dt_elem_i([ 26,58,96 ],9,collection,'False').
struct_dt_elem_i([ 26,58,96 ],9,'ExternalName','BackgroundColor').
struct_dt_elem_i([ 26,58,96 ],9,'ExternalNamespace','SGCS').
struct_dt_elem_i([ 26,58,96 ],9,'XmlType','Element').
struct_dt_elem_i([ 26,58,96 ],9,'XmlName','').
struct_dt_elem_i([ 26,58,96 ],9,'XmlNamespace','').
struct_dt_elem_i([ 26,58,96 ],9,soaptype,'').
struct_dt_elem_i([ 26,58,96 ],9,'XmlInclude',idXmlIncludeNotNull).
struct_dt_elem_i([ 26,58,96 ],9,'JsonName','').
struct_dt_elem_i([ 26,58,96 ],9,'JsonInclude',idJsonEmpty).
struct_dt_elem_i([ 26,58,96 ],10,name,'Nameweekview').
struct_dt_elem_i([ 26,58,96 ],10,camelname,'NameWeekView').
struct_dt_elem_i([ 26,58,96 ],10,length,9999).
struct_dt_elem_i([ 26,58,96 ],10,decimals,0).
struct_dt_elem_i([ 26,58,96 ],10,type,[ 5,9999,0 ]).
struct_dt_elem_i([ 26,58,96 ],10,pic,'').
struct_dt_elem_i([ 26,58,96 ],10,collection,'False').
struct_dt_elem_i([ 26,58,96 ],10,'ExternalName','NameWeekView').
struct_dt_elem_i([ 26,58,96 ],10,'ExternalNamespace','SGCS').
struct_dt_elem_i([ 26,58,96 ],10,'XmlType','Element').
struct_dt_elem_i([ 26,58,96 ],10,'XmlName','').
struct_dt_elem_i([ 26,58,96 ],10,'XmlNamespace','').
struct_dt_elem_i([ 26,58,96 ],10,soaptype,'').
struct_dt_elem_i([ 26,58,96 ],10,'XmlInclude',idXmlIncludeNotNull).
struct_dt_elem_i([ 26,58,96 ],10,'JsonName','').
struct_dt_elem_i([ 26,58,96 ],10,'JsonInclude',idJsonEmpty).
struct_dt_elem_i([ 26,58,96 ],11,name,'Namemonthview').
struct_dt_elem_i([ 26,58,96 ],11,camelname,'NameMonthView').
struct_dt_elem_i([ 26,58,96 ],11,length,9999).
struct_dt_elem_i([ 26,58,96 ],11,decimals,0).
struct_dt_elem_i([ 26,58,96 ],11,type,[ 5,9999,0 ]).
struct_dt_elem_i([ 26,58,96 ],11,pic,'').
struct_dt_elem_i([ 26,58,96 ],11,collection,'False').
struct_dt_elem_i([ 26,58,96 ],11,'ExternalName','NameMonthView').
struct_dt_elem_i([ 26,58,96 ],11,'ExternalNamespace','SGCS').
struct_dt_elem_i([ 26,58,96 ],11,'XmlType','Element').
struct_dt_elem_i([ 26,58,96 ],11,'XmlName','').
struct_dt_elem_i([ 26,58,96 ],11,'XmlNamespace','').
struct_dt_elem_i([ 26,58,96 ],11,soaptype,'').
struct_dt_elem_i([ 26,58,96 ],11,'XmlInclude',idXmlIncludeNotNull).
struct_dt_elem_i([ 26,58,96 ],11,'JsonName','').
struct_dt_elem_i([ 26,58,96 ],11,'JsonInclude',idJsonEmpty).
struct_dt_elem_i([ 26,58,96 ],12,name,'Namedayview').
struct_dt_elem_i([ 26,58,96 ],12,camelname,'NameDayView').
struct_dt_elem_i([ 26,58,96 ],12,length,9999).
struct_dt_elem_i([ 26,58,96 ],12,decimals,0).
struct_dt_elem_i([ 26,58,96 ],12,type,[ 5,9999,0 ]).
struct_dt_elem_i([ 26,58,96 ],12,pic,'').
struct_dt_elem_i([ 26,58,96 ],12,collection,'False').
struct_dt_elem_i([ 26,58,96 ],12,'ExternalName','NameDayView').
struct_dt_elem_i([ 26,58,96 ],12,'ExternalNamespace','SGCS').
struct_dt_elem_i([ 26,58,96 ],12,'XmlType','Element').
struct_dt_elem_i([ 26,58,96 ],12,'XmlName','').
struct_dt_elem_i([ 26,58,96 ],12,'XmlNamespace','').
struct_dt_elem_i([ 26,58,96 ],12,soaptype,'').
struct_dt_elem_i([ 26,58,96 ],12,'XmlInclude',idXmlIncludeNotNull).
struct_dt_elem_i([ 26,58,96 ],12,'JsonName','').
struct_dt_elem_i([ 26,58,96 ],12,'JsonInclude',idJsonEmpty).
struct_dt_elem_i([ 26,58,96 ],13,name,'Tooltip').
struct_dt_elem_i([ 26,58,96 ],13,camelname,'ToolTip').
struct_dt_elem_i([ 26,58,96 ],13,length,9999).
struct_dt_elem_i([ 26,58,96 ],13,decimals,0).
struct_dt_elem_i([ 26,58,96 ],13,type,[ 5,9999,0 ]).
struct_dt_elem_i([ 26,58,96 ],13,pic,'').
struct_dt_elem_i([ 26,58,96 ],13,collection,'False').
struct_dt_elem_i([ 26,58,96 ],13,'ExternalName','ToolTip').
struct_dt_elem_i([ 26,58,96 ],13,'ExternalNamespace','SGCS').
struct_dt_elem_i([ 26,58,96 ],13,'XmlType','Element').
struct_dt_elem_i([ 26,58,96 ],13,'XmlName','').
struct_dt_elem_i([ 26,58,96 ],13,'XmlNamespace','').
struct_dt_elem_i([ 26,58,96 ],13,soaptype,'').
struct_dt_elem_i([ 26,58,96 ],13,'XmlInclude',idXmlIncludeNotNull).
struct_dt_elem_i([ 26,58,96 ],13,'JsonName','').
struct_dt_elem_i([ 26,58,96 ],13,'JsonInclude',idJsonEmpty).
struct_dt_elem_i([ 26,58,0 ],2,name,'Specialdays').
struct_dt_elem_i([ 26,58,0 ],2,camelname,'SpecialDays').
struct_dt_elem_i([ 26,58,0 ],2,type,[ [ 26,58,97 ],0,0 ]).
struct_dt_elem_i([ 26,58,0 ],2,pic,'').
struct_dt_elem_i([ 26,58,0 ],2,collection,'True').
struct_dt_elem_i([ 26,58,0 ],2,'ObjName','SpecialDays').
struct_dt_elem_i([ 26,58,0 ],2,'ObjDesc','Days').
struct_dt_elem_i([ 26,58,0 ],2,'CollectionItemName','Day').
struct_dt_elem_i([ 26,58,0 ],2,'XmlCollectionItemName','').
struct_dt_elem_i([ 26,58,0 ],2,'XmlNamespace','').
struct_dt_elem_i([ 26,58,0 ],2,'CollectionSerialization',idXmlCollectionSequence).
struct_dt_elem_i([ 26,58,0 ],2,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,58,0 ],2,'JsonName','').
struct_dt_elem_i([ 26,58,0 ],2,'JsonInclude',idJsonNoProperty).
struct_dt_elem_i([ 26,58,97 ],1,name,'Date').
struct_dt_elem_i([ 26,58,97 ],1,camelname,'Date').
struct_dt_elem_i([ 26,58,97 ],1,length,8).
struct_dt_elem_i([ 26,58,97 ],1,decimals,0).
struct_dt_elem_i([ 26,58,97 ],1,type,[ 6,8,0 ]).
struct_dt_elem_i([ 26,58,97 ],1,pic,'99/99/99').
struct_dt_elem_i([ 26,58,97 ],1,collection,'False').
struct_dt_elem_i([ 26,58,97 ],1,'ExternalName','Date').
struct_dt_elem_i([ 26,58,97 ],1,'ExternalNamespace','SGCS').
struct_dt_elem_i([ 26,58,97 ],1,'XmlType','Element').
struct_dt_elem_i([ 26,58,97 ],1,'XmlName','').
struct_dt_elem_i([ 26,58,97 ],1,'XmlNamespace','').
struct_dt_elem_i([ 26,58,97 ],1,soaptype,'').
struct_dt_elem_i([ 26,58,97 ],1,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,58,97 ],1,'JsonName','').
struct_dt_elem_i([ 26,58,97 ],1,'JsonInclude',idJsonEmpty).
struct_dt_elem_i([ 26,58,97 ],2,name,'Color').
struct_dt_elem_i([ 26,58,97 ],2,camelname,'Color').
struct_dt_elem_i([ 26,58,97 ],2,length,9999).
struct_dt_elem_i([ 26,58,97 ],2,decimals,0).
struct_dt_elem_i([ 26,58,97 ],2,type,[ 5,9999,0 ]).
struct_dt_elem_i([ 26,58,97 ],2,pic,'').
struct_dt_elem_i([ 26,58,97 ],2,collection,'False').
struct_dt_elem_i([ 26,58,97 ],2,'ExternalName','Color').
struct_dt_elem_i([ 26,58,97 ],2,'ExternalNamespace','SGCS').
struct_dt_elem_i([ 26,58,97 ],2,'XmlType','Element').
struct_dt_elem_i([ 26,58,97 ],2,'XmlName','').
struct_dt_elem_i([ 26,58,97 ],2,'XmlNamespace','').
struct_dt_elem_i([ 26,58,97 ],2,soaptype,'').
struct_dt_elem_i([ 26,58,97 ],2,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,58,97 ],2,'JsonName','').
struct_dt_elem_i([ 26,58,97 ],2,'JsonInclude',idJsonEmpty).
 
 
 
security_permission_i(schedulerdetailsform_Execute,execute,'').
 
 
sub_info_i(146,'Start',1,3,[ [ 'Websession' ],[] ]).
 
 
pgm_callprotocol_i(web,131,'SCHEDULERDETAILSFORM','INTERNAL','Secure').
 
 
 
 
 
 
 
 
 
 
 
 
 
